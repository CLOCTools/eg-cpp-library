<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classexample_1_1_linear_regression_model" kind="class" language="C++" prot="public">
    <compoundname>example::LinearRegressionModel</compoundname>
    <includes refid="linear__regression__model_8h" local="no">linear_regression_model.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classexample_1_1_linear_regression_model_1aed962da4bec0f0034683be4537071143" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t example::LinearRegressionModel::n_x</definition>
        <argsstring></argsstring>
        <name>n_x</name>
        <briefdescription>
<para>number of input channels </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/include/egcpp_h/linear_regression_model.h" line="92" column="16" bodyfile="build/include/egcpp_h/linear_regression_model.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classexample_1_1_linear_regression_model_1a637fffa747841b68fb61864c7d1a4f8f" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t example::LinearRegressionModel::n_y</definition>
        <argsstring></argsstring>
        <name>n_y</name>
        <briefdescription>
<para>number of output channels </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/include/egcpp_h/linear_regression_model.h" line="93" column="16" bodyfile="build/include/egcpp_h/linear_regression_model.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classexample_1_1_linear_regression_model_1a5aee76b746972f4176fab91bbf73e762" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat example::LinearRegressionModel::C_</definition>
        <argsstring></argsstring>
        <name>C_</name>
        <briefdescription>
<para>output matrix </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/include/egcpp_h/linear_regression_model.h" line="96" column="13" bodyfile="build/include/egcpp_h/linear_regression_model.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classexample_1_1_linear_regression_model_1af2ee0542df8306267496b499a0bbd664" prot="private" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec example::LinearRegressionModel::d_</definition>
        <argsstring></argsstring>
        <name>d_</name>
        <briefdescription>
<para>output bias </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/include/egcpp_h/linear_regression_model.h" line="97" column="13" bodyfile="build/include/egcpp_h/linear_regression_model.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classexample_1_1_linear_regression_model_1a0717da28d69ad0e7e140b6be7212d778" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat example::LinearRegressionModel::R_</definition>
        <argsstring></argsstring>
        <name>R_</name>
        <briefdescription>
<para>measurement noise covariance </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/include/egcpp_h/linear_regression_model.h" line="98" column="13" bodyfile="build/include/egcpp_h/linear_regression_model.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classexample_1_1_linear_regression_model_1ab011b5239fbca7e363c14946f17ee0c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>example::LinearRegressionModel::LinearRegressionModel</definition>
        <argsstring>(const arma::mat &amp;x, const arma::mat &amp;z)</argsstring>
        <name>LinearRegressionModel</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Constructs and fits a new <ref refid="classexample_1_1_linear_regression_model" kindref="compound">LinearRegressionModel</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Given input/output data, constructs and fits a new Linear Regression Model:</para>
<para>y = C*x + d</para>
<para>z ~ N(y, R)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data [n_x x n_t] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>Measured output data [n_y x n_t] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/include/egcpp_h/linear_regression_model.h" line="53" column="3" bodyfile="src/linear_regression_model.cpp" bodystart="29" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_linear_regression_model_1a7ead2ac419f9f6106d27fe98ff13dd4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>example::LinearRegressionModel::LinearRegressionModel</definition>
        <argsstring>(const arma::mat &amp;C, const arma::vec &amp;d, const arma::mat &amp;R)</argsstring>
        <name>LinearRegressionModel</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>R</declname>
        </param>
        <briefdescription>
<para>Constructs a new <ref refid="classexample_1_1_linear_regression_model" kindref="compound">LinearRegressionModel</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new Linear Regression Model from parameters:</para>
<para>y = C*x + d</para>
<para>z ~ N(y, R)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>output bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>measurement noise covariance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/include/egcpp_h/linear_regression_model.h" line="68" column="3" bodyfile="src/linear_regression_model.cpp" bodystart="68" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_linear_regression_model_1a2a0766c9e6ccfb53d4ccceb28688ecd5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto example::LinearRegressionModel::C</definition>
        <argsstring>() const -&gt; const arma::mat &amp;</argsstring>
        <name>C</name>
        <briefdescription>
<para>get output matrix (C) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/include/egcpp_h/linear_regression_model.h" line="74" column="8" bodyfile="build/include/egcpp_h/linear_regression_model.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_linear_regression_model_1af74923a3062ca7ffd577971cd3ab018c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto example::LinearRegressionModel::d</definition>
        <argsstring>() const -&gt; const arma::vec &amp;</argsstring>
        <name>d</name>
        <briefdescription>
<para>get output bias (d) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/include/egcpp_h/linear_regression_model.h" line="77" column="8" bodyfile="build/include/egcpp_h/linear_regression_model.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_linear_regression_model_1a1bc4cc89385d79295d9427b73ced74c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto example::LinearRegressionModel::R</definition>
        <argsstring>() const -&gt; const arma::mat &amp;</argsstring>
        <name>R</name>
        <briefdescription>
<para>get measurement noise covariance (R) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/include/egcpp_h/linear_regression_model.h" line="80" column="8" bodyfile="build/include/egcpp_h/linear_regression_model.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_linear_regression_model_1a8cde61417cfff2b86fac25d766014b3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto example::LinearRegressionModel::simulate</definition>
        <argsstring>(const arma::mat &amp;x, bool add_noise=false) -&gt; arma::mat</argsstring>
        <name>simulate</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>add_noise</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>simulates linear regression model </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>add_noise</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to add measurement noise</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>model output </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/include/egcpp_h/linear_regression_model.h" line="90" column="8" bodyfile="src/linear_regression_model.cpp" bodystart="81" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Linear Regression Model. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/include/egcpp_h/linear_regression_model.h" line="39" column="1" bodyfile="build/include/egcpp_h/linear_regression_model.h" bodystart="39" bodyend="99"/>
    <listofallmembers>
      <member refid="classexample_1_1_linear_regression_model_1a2a0766c9e6ccfb53d4ccceb28688ecd5" prot="public" virt="non-virtual"><scope>example::LinearRegressionModel</scope><name>C</name></member>
      <member refid="classexample_1_1_linear_regression_model_1a5aee76b746972f4176fab91bbf73e762" prot="private" virt="non-virtual"><scope>example::LinearRegressionModel</scope><name>C_</name></member>
      <member refid="classexample_1_1_linear_regression_model_1af74923a3062ca7ffd577971cd3ab018c" prot="public" virt="non-virtual"><scope>example::LinearRegressionModel</scope><name>d</name></member>
      <member refid="classexample_1_1_linear_regression_model_1af2ee0542df8306267496b499a0bbd664" prot="private" virt="non-virtual"><scope>example::LinearRegressionModel</scope><name>d_</name></member>
      <member refid="classexample_1_1_linear_regression_model_1ab011b5239fbca7e363c14946f17ee0c1" prot="public" virt="non-virtual"><scope>example::LinearRegressionModel</scope><name>LinearRegressionModel</name></member>
      <member refid="classexample_1_1_linear_regression_model_1a7ead2ac419f9f6106d27fe98ff13dd4a" prot="public" virt="non-virtual"><scope>example::LinearRegressionModel</scope><name>LinearRegressionModel</name></member>
      <member refid="classexample_1_1_linear_regression_model_1aed962da4bec0f0034683be4537071143" prot="public" virt="non-virtual"><scope>example::LinearRegressionModel</scope><name>n_x</name></member>
      <member refid="classexample_1_1_linear_regression_model_1a637fffa747841b68fb61864c7d1a4f8f" prot="public" virt="non-virtual"><scope>example::LinearRegressionModel</scope><name>n_y</name></member>
      <member refid="classexample_1_1_linear_regression_model_1a1bc4cc89385d79295d9427b73ced74c8" prot="public" virt="non-virtual"><scope>example::LinearRegressionModel</scope><name>R</name></member>
      <member refid="classexample_1_1_linear_regression_model_1a0717da28d69ad0e7e140b6be7212d778" prot="private" virt="non-virtual"><scope>example::LinearRegressionModel</scope><name>R_</name></member>
      <member refid="classexample_1_1_linear_regression_model_1a8cde61417cfff2b86fac25d766014b3b" prot="public" virt="non-virtual"><scope>example::LinearRegressionModel</scope><name>simulate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
